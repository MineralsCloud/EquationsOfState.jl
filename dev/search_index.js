var documenterSearchIndex = {"docs":
[{"location":"NonlinearFitting/#Nonlinear-fitting-1","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"","category":"section"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"CurrentModule = EquationsOfState.NonlinearFitting","category":"page"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"From Ref. 1,","category":"page"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"The equations of state depend nonlinearly of a collection of parameters, E_0, V_0, B_0, B_0, ..., that represent physical properties of the solid at equilibrium and can, in principle, be obtained expermentally by independent methods. The use of a given analytical EOS may have significant influence on the results obtained, particularly because the parameters are far from being independent. The number of parameters has to be considered in comparing the goodness of fit of functional forms with different analytical flexibility. The possibility of using too many parameters, beyond what is physically justified by the information contained in the experimental data, is a serious aspect that deserves consideration.","category":"page"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"In EquationsOfState, the nonlinear fitting is currently implemented by LsqFit, a small library that provides basic least-squares fitting in pure Julia. It only utilizes the Levenberg-Marquardt algorithm for non-linear fitting. See its documentation for more information.","category":"page"},{"location":"NonlinearFitting/#Usage-1","page":"Nonlinear fitting","title":"Usage","text":"","category":"section"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"We provide API lsqfit currently.","category":"page"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"using EquationsOfState\nusing EquationsOfState.Collections\nusing EquationsOfState.NonlinearFitting\n\nvolumes = [\n    25.987454833,\n    26.9045702104,\n    27.8430241908,\n    28.8029649591,\n    29.7848370694,\n    30.7887887064,\n    31.814968055,\n    32.8638196693,\n    33.9353435494,\n    35.0299842495,\n    36.1477417695,\n    37.2892088485,\n    38.4543854865,\n    39.6437162376,\n    40.857201102,\n    42.095136449,\n    43.3579668329,\n    44.6456922537,\n    45.9587572656,\n    47.2973100535,\n    48.6614988019,\n    50.0517680652,\n    51.4682660281,\n    52.9112890601,\n    54.3808371612,\n    55.8775030703,\n    57.4014349722,\n    58.9526328669\n]\nenergies = [\n    -7.63622156576,\n    -8.16831294894,\n    -8.63871612686,\n    -9.05181213218,\n    -9.41170988374,\n    -9.72238224345,\n    -9.98744832526,\n    -10.210309552,\n    -10.3943401353,\n    -10.5427238068,\n    -10.6584266073,\n    -10.7442240979,\n    -10.8027285713,\n    -10.8363890521,\n    -10.8474912964,\n    -10.838157792,\n    -10.8103477586,\n    -10.7659387815,\n    -10.7066179666,\n    -10.6339907853,\n    -10.5495538639,\n    -10.4546677714,\n    -10.3506386542,\n    -10.2386366017,\n    -10.1197772808,\n    -9.99504030111,\n    -9.86535084973,\n    -9.73155247952\n]\n\nlsqfit(EnergyRelation, BirchMurnaghan3rd(40, 0.5, 4, 0), volumes, energies)\nlsqfit(EnergyRelation, Murnaghan(41, 0.5, 4, 0), volumes, energies)\nlsqfit(EnergyRelation, PoirierTarantola3rd(41, 0.5, 4, 0), volumes, energies)\nlsqfit(EnergyRelation, Vinet(41, 0.5, 4, 0), volumes, energies)","category":"page"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"Then 4 different equations of state will be fitted.","category":"page"},{"location":"NonlinearFitting/#Public-interfaces-1","page":"Nonlinear fitting","title":"Public interfaces","text":"","category":"section"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"lsqfit(::Type{<:EquationOfStateRelation}, eos::E, xdata::X, ydata::Y; debug = false, kwargs...) where {E<:EquationOfState,X<:AbstractVector,Y<:AbstractVector}","category":"page"},{"location":"NonlinearFitting/#EquationsOfState.NonlinearFitting.lsqfit-Union{Tuple{Y}, Tuple{X}, Tuple{E}, Tuple{Type{#s5} where #s5<:EquationOfStateRelation,E,X,Y}} where Y<:(AbstractArray{T,1} where T) where X<:(AbstractArray{T,1} where T) where E<:EquationsOfState.Collections.EquationOfState","page":"Nonlinear fitting","title":"EquationsOfState.NonlinearFitting.lsqfit","text":"lsqfit(T, eos, xdata, ydata; debug = false, kwargs...)\n\nFit an equation of state using least-squares fitting method (with the Levenberg-Marquardt algorithm).\n\nArguments\n\nT::Type{<:EquationOfStateRelation}: an EquationOfStateRelation. If it is EnergyRelation, fit E(V); if PressureRelation, fit P(V); if BulkModulusRelation, fit B(V).\neos::EquationOfState: a trial equation of state.\nxdata::AbstractVector: a vector of volumes.\nydata::AbstractVector: a vector of energies, pressures, or bulk moduli.\ndebug::Bool=false: if true, then an LsqFit.LsqFitResult is returned, containing estimated Jacobian, residuals, etc.; if false, a fitted EquationOfState is returned. The default value is false.\nkwargs: the rest keyword arguments that will be sent to LsqFit.curve_fit. See its documentation.\n\n\n\n\n\n","category":"method"},{"location":"NonlinearFitting/#References-1","page":"Nonlinear fitting","title":"References","text":"","category":"section"},{"location":"NonlinearFitting/#","page":"Nonlinear fitting","title":"Nonlinear fitting","text":"A. Otero-De-La-Roza, V. Luaña, Computer Physics Communications. 182, 1708–1720 (2011), doi:10.1016/j.cpc.2011.04.016.","category":"page"},{"location":"Collections/#Collections-1","page":"Collections","title":"Collections","text":"","category":"section"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"CurrentModule = EquationsOfState.Collections","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"The current EquationOfStates contain","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"EquationOfState\n├─ AntonSchmidt\n├─ BreenanStacey\n├─ FiniteStrainEquationOfState\n│  ├─ BirchMurnaghan2nd\n│  ├─ BirchMurnaghan3rd\n│  ├─ BirchMurnaghan4th\n│  ├─ PoirierTarantola2nd\n│  ├─ PoirierTarantola3rd\n│  └─ PoirierTarantola4th\n├─ Murnaghan\n├─ PolynomialEquationOfState\n└─ Vinet","category":"page"},{"location":"Collections/#Types-1","page":"Collections","title":"Types","text":"","category":"section"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"EquationOfState\nFiniteStrainEquationOfState\nMurnaghan\nBirchMurnaghan2nd\nBirchMurnaghan3rd\nBirchMurnaghan4th\nPoirierTarantola2nd\nPoirierTarantola3rd\nPoirierTarantola4th\nVinet","category":"page"},{"location":"Collections/#EquationsOfState.Collections.EquationOfState","page":"Collections","title":"EquationsOfState.Collections.EquationOfState","text":"EquationOfState{T,N} <: FieldVector{N,T}\n\nAn abstraction of equations of state, where T specifies the elements' type, and N specifies the number of fields.\n\nEquationOfState{T,N} is the abstraction of all equations of state. Subtype it with your customized T and N. It is also a subtype of FieldVector from package StaticArrays.jl.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.FiniteStrainEquationOfState","page":"Collections","title":"EquationsOfState.Collections.FiniteStrainEquationOfState","text":"FiniteStrainEquationOfState{T,N} <: EquationOfState{T,N}\n\nAn abstraction of finite strain equations of state.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.Murnaghan","page":"Collections","title":"EquationsOfState.Collections.Murnaghan","text":"Murnaghan(v0, b0, bp0, e0=0)\n\nCreate a Murnaghan equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.BirchMurnaghan2nd","page":"Collections","title":"EquationsOfState.Collections.BirchMurnaghan2nd","text":"BirchMurnaghan2nd(v0, b0, e0=0)\n\nCreate a Birch–Murnaghan 2nd order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.BirchMurnaghan3rd","page":"Collections","title":"EquationsOfState.Collections.BirchMurnaghan3rd","text":"BirchMurnaghan3rd(v0, b0, bp0, e0=0)\n\nCreate a Birch–Murnaghan 3rd order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.BirchMurnaghan4th","page":"Collections","title":"EquationsOfState.Collections.BirchMurnaghan4th","text":"BirchMurnaghan4th(v0, b0, bp0, bpp0, e0=0)\n\nCreate a Birch–Murnaghan 4th order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\nbpp0: the second-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.PoirierTarantola2nd","page":"Collections","title":"EquationsOfState.Collections.PoirierTarantola2nd","text":"PoirierTarantola2nd(v0, b0, e0=0)\n\nCreate a Poirier–Tarantola order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.PoirierTarantola3rd","page":"Collections","title":"EquationsOfState.Collections.PoirierTarantola3rd","text":"PoirierTarantola3rd(v0, b0, bp0, e0=0)\n\nCreate a Poirier–Tarantola 3rd order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.PoirierTarantola4th","page":"Collections","title":"EquationsOfState.Collections.PoirierTarantola4th","text":"PoirierTarantola4th(v0, b0, bp0, bpp0, e0=0)\n\nCreate a Birch–Murnaghan 4th order equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\nbpp0: the second-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#EquationsOfState.Collections.Vinet","page":"Collections","title":"EquationsOfState.Collections.Vinet","text":"Vinet(v0, b0, bp0, e0=0)\n\nCreate a Vinet equation of state. The elements' type will be handled automatically.\n\nArguments\n\nv0: the volume of solid at zero pressure.\nb0: the bulk modulus of solid at zero pressure.\nbp0: the first-order pressure-derivative bulk modulus of solid at zero pressure.\ne0=0: the energy of solid at zero pressure. By default is 0.\n\n\n\n\n\n","category":"type"},{"location":"Collections/#Usage-1","page":"Collections","title":"Usage","text":"","category":"section"},{"location":"Collections/#Construct-an-EquationOfState-1","page":"Collections","title":"Construct an EquationOfState","text":"","category":"section"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"We will use BirchMurnaghan3rd as an example.","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"BirchMurnaghan3rd can be constructed from scratch:","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"julia> BirchMurnaghan3rd(1, 2, 3)\n4-element BirchMurnaghan3rd{Int64}:\n 1\n 2\n 3\n 0\n\njulia> BirchMurnaghan3rd(1, 2, 3, 4)\n4-element BirchMurnaghan3rd{Int64}:\n 1\n 2\n 3\n 4\n\njulia> BirchMurnaghan3rd(1, 2, 3, 4.0)\n4-element BirchMurnaghan3rd{Float64}:\n 1.0\n 2.0\n 3.0\n 4.0","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"It can also be constructed from an existing BirchMurnaghan3rd:","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"julia> BirchMurnaghan3rd(BirchMurnaghan3rd(1, 2, 3, 4.0), b0=10, e0=5)\n4-element BirchMurnaghan3rd{Float64}:\n  1.0\n 10.0\n  3.0\n  5.0\n\njulia> BirchMurnaghan3rd(BirchMurnaghan3rd(1, 2, 3, 4.0), Dict(:b0=>10, :e0=>5))\n4-element BirchMurnaghan3rd{Float64}:\n  1.0\n 10.0\n  3.0\n  5.0\n\njulia> BirchMurnaghan3rd(BirchMurnaghan3rd(1, 2, 3, 4.0), (:b0, 10))\n4-element BirchMurnaghan3rd{Float64}:\n  1.0\n 10.0\n  3.0\n  4.0","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"Users can access BirchMurnaghan3rd's element by either \"dot notation\" or indexing:","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"julia> b = BirchMurnaghan3rd(1, 2, 3, 4.0)\n4-element BirchMurnaghan3rd{Float64}:\n 1.0\n 2.0\n 3.0\n 4.0\n\njulia> b.v0\n1.0\n\njulia> b[1]\n1.0","category":"page"},{"location":"Collections/#Calculate-energies-on-an-EquationOfState-1","page":"Collections","title":"Calculate energies on an EquationOfState","text":"","category":"section"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"The E(V) relation of equations of state are listed as below:","category":"page"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"Murnaghan:\nE(V) = E_0+K_0 V_0leftfrac1K_0^primeleft(K_0^prime-1right)left(fracVV_0right)^1-K_0^prime+frac1K_0^prime fracVV_0-frac1K_0^prime-1right\nBirchMurnaghan2nd:\nE(V) = E_0 + frac98 B_0 V_0 left(left( V  V_0 right)^-2  3-1right)^2\nBirchMurnaghan3rd:\nE(V) = E_0+frac916 V_0 B_0 fracleft(x^2  3-1right)^2x^7  3leftx^1  3left(B_0^prime-4right)-xleft(B_0^prime-6right)right\nwhere x = V  V_0, and f = frac 1  2  bigg bigg( frac V_0  V  bigg)^23 - 1 bigg.\nBirchMurnaghan4th:\nE(V) = E_0+frac38 V_0 B_0 f^2leftleft(9 H-63 B_0^prime+143right) f^2+12left(B_0^prime-4right) f+12right\nwhere H = B_0 B_0 + (B_0)^2.\nPoirierTarantola2nd:\nE(V) = E_0+frac12 B_0 V_0 ln ^2 x","category":"page"},{"location":"Collections/#Public-interfaces-1","page":"Collections","title":"Public interfaces","text":"","category":"section"},{"location":"Collections/#","page":"Collections","title":"Collections","text":"calculate(::Type{EnergyRelation}, eos::EquationOfState)\ncalculate(::Type{EnergyRelation}, eos::Murnaghan, v::Real)\ncalculate(::Type{EnergyRelation}, eos::BirchMurnaghan2nd, v::Real)\ncalculate(::Type{EnergyRelation}, eos::BirchMurnaghan3rd, v::Real)\ncalculate(::Type{EnergyRelation}, eos::BirchMurnaghan4th, v::Real)\n\ncalculate(::Type{PressureRelation}, eos::EquationOfState)\n\ncalculate(::Type{BulkModulusRelation}, eos::EquationOfState)","category":"page"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{EnergyRelation},EquationsOfState.Collections.EquationOfState}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(EnergyRelation, eos::EquationOfState)\n\nReturn a function that can take a volume as a parameter, suitable for batch-applying.\n\nExamples\n\njulia> using EquationsOfState, EquationsOfState.Collections\n\njulia> f = calculate(EnergyRelation, Vinet(1, 2, 3));\n\njulia> map(f, 1:1:10)\n10-element Array{Float64,1}:\n 0.0\n 0.367905230584308\n 0.7652477289745814\n 1.0516459435179233\n 1.2560420090256408\n 1.405149833626178\n 1.5165867441792136\n 1.6017034530570884\n 1.6679539823686644\n 1.7203642945516917\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{EnergyRelation},EquationsOfState.Collections.Murnaghan,Real}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(EnergyRelation, eos::Murnaghan, v::Real)\n\nReturn the energy of a Murnaghan equation of state on volume v.\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{EnergyRelation},EquationsOfState.Collections.BirchMurnaghan2nd,Real}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(EnergyRelation, eos::BirchMurnaghan2nd, v::Real)\n\nReturn the energy of a BirchMurnaghan2nd equation of state on volume v.\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{EnergyRelation},EquationsOfState.Collections.BirchMurnaghan3rd,Real}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(EnergyRelation, eos::BirchMurnaghan3rd, v::Real)\n\nReturn the energy of a BirchMurnaghan3rd equation of state on volume v.\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{EnergyRelation},EquationsOfState.Collections.BirchMurnaghan4th,Real}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(EnergyRelation, eos::BirchMurnaghan4th, v::Real)\n\nReturn the energy of a BirchMurnaghan4th equation of state on volume v.\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{PressureRelation},EquationsOfState.Collections.EquationOfState}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(PressureRelation, eos::EquationOfState)\n\nReturn a function that can take a volume as a parameter, suitable for batch-applying.\n\nExamples\n\njulia> using EquationsOfState, EquationsOfState.Collections\n\njulia> f = calculate(PressureRelation, Vinet(1, 2, 3));\n\njulia> map(f, 1:1:10)\n10-element Array{Float64,1}:\n  0.0                \n -0.45046308428750254\n -0.3384840350043251 \n -0.24010297221667418\n -0.17314062272722755\n -0.12795492664586872\n -0.09677154467733216\n -0.07468060255179591\n -0.05864401631176751\n -0.04674768462396211\n\n\n\n\n\n","category":"method"},{"location":"Collections/#EquationsOfState.Collections.calculate-Tuple{Type{BulkModulusRelation},EquationsOfState.Collections.EquationOfState}","page":"Collections","title":"EquationsOfState.Collections.calculate","text":"calculate(BulkModulusRelation, eos::EquationOfState)\n\nReturn a function that can take a volume as a parameter, suitable for batch-applying.\n\nExamples\n\njulia> using EquationsOfState, EquationsOfState.Collections\n\njulia> f = calculate(BulkModulusRelation, BirchMurnaghan3rd(1, 2, 3));\n\njulia> map(f, 1:1:10)\n10-element Array{Float64,1}:\n 2.0                 \n 0.9216086833346415  \n 0.444903691617472   \n 0.2540009203153288  \n 0.16193296566524193 \n 0.11130584492987289 \n 0.08076305569984538 \n 0.06103515625       \n 0.047609811583958425\n 0.03808959181078831 \n\n\n\n\n\n","category":"method"},{"location":"#EquationsOfState.jl-1","page":"Home","title":"EquationsOfState.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"note: Note\nStarting from v2.0.0, EquationsOfState.jl has been rewritten.  The former behaviors of EquationsOfState.jl (v1.1.4 and earlier) will be deprecated. Please follow the latest documentation.","category":"page"},{"location":"#Package-Features-1","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Calculate energy, pressure, and bulk modulus of an EquationOfState of a specific volume.\nFit an EquationOfState on a series of volumes using least-squares fitting method.\nFit an EquationOfState on a series of volumes linearly.\nFind the corresponding volume on an EquationOfState given one of the energy, pressure, and bulk modulus.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"See the Index for the complete list of documented functions and types.","category":"page"},{"location":"#Manual-Outline-1","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Pages = [\n    \"Collections.md\",\n    \"NonlinearFitting.md\"\n]\nDepth = 3","category":"page"},{"location":"#main-index-1","page":"Home","title":"Index","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"}]
}
